openapi: 3.0.1
info:
  title: Resource Service
  description: API documentation for the resource service
  version: 1.0.0
tags:
  - name: resource-service
    description: Operations related to SkyU resource management
security:
  - BearerAuth: []
servers:
  - url: http://localhost:3100
    description: Development server
paths:
  /organizations:
    post:
      operationId: OrganizationController_create
      parameters:
        - name: x-trace-id
          in: header
          description: Trace ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationDto'
      responses:
        '201':
          description: Successful Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data: 
                        $ref: '#/components/schemas/Organization'
                        
        '401':
          description: Unauthorized
  /organizations/filter:
    post:
      operationId: OrganizationController_findOrganizations
      summary: Filter organizations by Organization IDs.
      parameters:
        - name: x-trace-id
          in: header
          description: Trace ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrganizationsDTO'
      responses:
        '200':
          description: Organizations found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data:
                       type: array
                       items:
                         $ref: '#/components/schemas/Organization'
  /organizations/find:                         
    get:
      operationId: OrganizationController_findOne
      parameters:
        - name: x-organization-id
          in: header
          required: true
          description: Organization ID
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace ID
          schema:
            type: string
      responses:
        '200':
          description: Successful Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data: 
                        $ref: '#/components/schemas/Organization'
  /organizations/update:
    patch:
      operationId: OrganizationController_update
      parameters:
        - name: x-organization-id
          in: header
          required: true
          description: Organization ID
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationDto'
      responses:
        '200':
          description: Organization updated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data: 
                        $ref: '#/components/schemas/Organization'
  /organizations/remove:
    delete:
      operationId: OrganizationController_remove
      parameters:
        - name: x-organization-id
          in: header
          required: true
          description: Organization ID
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace ID
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDto'
  /organizations/soft:
    delete:
      operationId: OrganizationController_softDeleteOrganization
      parameters:
        - name: x-organization-id
          in: header
          required: true
          description: Organization ID
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace ID
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDto'
  /environments:
    post:
      operationId: EnvironmentController_create
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEnvironmentDto'
      responses:
        '201':
          description: The record created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Environment'
    

  /environments/findEnvironments:
    get:
      operationId: EnvironmentController_findEnvironmentsByProjectId
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The records found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Environment'

  /environments/find:
    get:
      operationId: EnvironmentController_findEnvironment
      parameters:
        - name: serviceAccountRequired
          in: query
          description: Whether service account is required
          schema:
            type: boolean
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-environment-id
          in: header
          description: Environment ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The record found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Environment'
 
  /environments/update:
    patch:
      operationId: EnvironmentController_update
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-credential-id
          in: header
          description: Required if updating namespaces
          required: false
          schema:
            type: string
        - name: x-environment-id
          in: header
          description: Environment ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEnvironmentDto'
      responses:
        '200':
          description: The record updated
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Environment'

  /environments/remove:
    delete:
      operationId: EnvironmentController_remove
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-environment-id
          in: header
          description: Environment ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDto'

  /environments/linkCluster:
    post:
      operationId: EnvironmentController_connectCluster
      summary: Connect a cluster to the environment.
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-environment-id
          in: header
          description: Environment ID is required
          required: true
          schema:
            type: string
        - name: x-cluster-id
          in: header
          description: Cluster ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The record created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/ClusterAssociationResponseDto'
        '201':
          description: ''

  /environments/findClusters:
    get:
      operationId: EnvironmentController_findClustersByEnvironmentId
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-environment-id
          in: header
          description: Environment ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Clusters retrived
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDto'
     
  /environments/removeCluster:
    delete:
      operationId: EnvironmentController_removeClusterAssociation
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-cluster-id
          in: header
          description: Cluster ID is required
          required: true
          schema:
            type: string
        - name: x-environment-id
          in: header
          description: Environment ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDto'
    
  /environments/environmentBuckets:
    get:
      operationId: EnvironmentController_getEnvironmentBuckets
      parameters:

        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The records found
          content:
            application/json:
             schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Environment'
     
  /environments/applicationCount:
    get:
      operationId: EnvironmentController_getRunningApplicationCount
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-environment-id
          in: header
          description: Environment ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The records found
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/RunningApplications'
      
  /environments/soft:
    delete:
      operationId: EnvironmentController_softDeleteEnvironment
      parameters:
        - name: x-environment-id
          in: header
          description: Environment ID is required
          required: true
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The records soft deleted
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          affected:
                            type: number

   
  /environments/hard:
    delete:
      operationId: EnvironmentController_hardDeleteEnvironment
      parameters:
        - name: x-environment-id
          in: header
          description: Environment ID is required
          required: true
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The records soft deleted
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          affected:
                            type: number
      
  /applications/deployment:
    post:
      operationId: ApplicationController_createDeploymentApplication
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeploymentAppDto'
      responses:
        '201':
          description: 'Record created successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      type: object
                      items:
                        $ref: '#/components/schemas/Application'

  /applications/cronjob:
    post:
      operationId: ApplicationController_createCronJobApplication
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCronJobAppDto'
      responses:
        '201':
          description: 'Record created successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      type: object
                      items:
                        $ref: '#/components/schemas/Application'
    
  /applications/web-app:
    post:
      operationId: ApplicationController_createWebApp
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWebAppDto'
      responses:
        '201':
          description: 'Record created successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      type: object
                      items:
                        $ref: '#/components/schemas/Application'

    put:
      operationId: ApplicationController_updateWebApp
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWebAppDto'
      responses:
        '200':
          description: 'Record updated successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      type: object
                      items:
                        $ref: '#/components/schemas/Application'
      
  /applications/ssr-web-app:
    post:
      operationId: ApplicationController_createSSRWebApp
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSSRWebAppDto'
      responses:
        '201':
          description: 'Record created successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      type: object
                      items:
                        $ref: '#/components/schemas/Application'
      
  /applications/ec2-cronjob:
    post:
      operationId: ApplicationController_createEC2CronJobApplication
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEC2CronJobAppDto'
      responses:
        '201':
          description: 'Record created successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      type: object
                      items:
                        $ref: '#/components/schemas/Application'
    
  /applications/lambda:
    post:
      operationId: ApplicationController_createLambdaApplication
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLambdaAppDto'
      responses:
        '201':
          description: 'Record created successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      type: object
                      items:
                        $ref: '#/components/schemas/Application'
      
  /applications/docker-helm:
    post:
      operationId: ApplicationController_createSourceToDockerToHelmApplication
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSourceToDockerToHelmAppDto'
      responses:
        '201':
          description: 'Record created successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      type: object
                      items:
                        $ref: '#/components/schemas/Application'
  
  /applications/generic-docker:
    post:
      operationId: ApplicationController_createGenericDockerApplication
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGenericDockerAppDTO'
      responses:
        '201':
          description: 'Record created successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      type: object
                      items:
                        $ref: '#/components/schemas/Application'
  
  /applications/helm-chart:
    post:
      operationId: ApplicationController_createHelmChartApplication
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHelmChartAppDTO'
      responses:
        '201':
          description: 'Record creation request accepted'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      type: object
                      items:
                        $ref: '#/components/schemas/Application'

  /applications/sam:
    post:
      operationId: ApplicationController_createSamApplication
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSamAppDto'
      responses:
        '201':
          description: 'Record created successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      type: object
                      items:
                        $ref: '#/components/schemas/Application'

  /applications/custom:
    post:
      operationId: ApplicationController_createCustomApplication
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomAppDto'
      responses:
        '201':
          description: 'Record created successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      type: object
                      items:
                        $ref: '#/components/schemas/Application'
      
  /applications/findApplications:
    get:
      operationId: ApplicationController_findApplicationsByProjectId
      parameters:
        - name: populate
          in: query
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Record found successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/Application'
                        
  /applications/find:
    get:
      operationId: ApplicationController_findApplication
      parameters:
        - name: populate
          in: query
          schema:
            type: string
        - name: requireSpec
          in: query
          schema:
            type: string
        - name: environmentId
          in: query
          schema:
            type: string
        - name: versionId
          in: query
          schema:
            type: string
        - name: x-application-id
          in: header
          description: Application ID is required
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Record found successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDto'
    
  /applications/updateConfig:
    patch:
      operationId: ApplicationController_updateConfigurations
      parameters:
        - name: x-environment-id
          in: header
          required: true
          description: Environment ID is required
          schema:
            type: string
        - name: x-application-id
          in: header
          required: true
          description: Application ID is required
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConfigurationDTO'
      responses:
        '200':
          description: 'Record updated successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      type: object
                      items:
                        $ref: '#/components/schemas/GitHubCommits'
     
  /applications/deploy:
    patch:
      operationId: ApplicationController_deploy
      parameters:
        - name: x-environment-id
          in: header
          required: true
          description: Environment ID is required
          schema:
            type: string
        - name: x-application-id
          in: header
          required: true
          description: Application ID is required
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationDeployDTO'
      responses:
        '200':
          description: 'Record created successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDto'
 
  /applications/multiple-deploy:
    patch:
      operationId: ApplicationController_multipleContainerDeploy
      parameters:
        - name: x-environment-id
          in: header
          required: true
          description: Environment ID is required
          schema:
            type: string
        - name: x-application-id
          in: header
          required: true
          description: Application ID is required
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleDeployDTO'
      responses:
        '200':
          description: 'Record created successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDto'
  
  /applications/redeploy:
    patch:
      operationId: ApplicationController_redeployApplication
      parameters:
        - name: x-environment-id
          in: header
          required: true
          description: Environment ID is required
          schema:
            type: string
        - name: x-application-id
          in: header
          required: true
          description: Application ID is required
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationRedeployDTO'
      responses:
        '200':
          description: 'Record created successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDto'
    
  /applications/create-workflow:
    post:
      operationId: ApplicationController_createWorkflow
      parameters:
        - name: x-application-id
          in: header
          required: true
          description: Application ID is required
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkflowDto'
      responses:
        '201':
          description: 'Record created successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDto'
 
  /applications/install:
    post:
      operationId: ApplicationController_installApplication
      parameters:
        - name: versionId
          in: query
          required: true
          description: Version id to uniquely identify version
          schema:
            type: string
        - name: x-environment-id
          in: header
          required: true
          description: Environment ID is required
          schema:
            type: string
        - name: x-application-id
          in: header
          required: true
          description: Application ID is required
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      responses:
        '201':
          description: 'Record installed successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      type: object
                      items:
                        $ref: '#/components/schemas/GitHubFileContent'
     
  /applications/update-helm-values:
    post:
      operationId: ApplicationController_updateHelmAppValues
      parameters:
        - name: x-environment-id
          in: header
          required: true
          description: Environment ID is required
          schema:
            type: string
        - name: x-application-id
          in: header
          required: true
          description: Application ID is required
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HelmValueUpdateDto'
      responses:
        '201':
          description: 'Record updated successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      type: object
                      items:
                        $ref: '#/components/schemas/GitHubFileContent'
    
  /applications/update-helm-values-yaml:
    post:
      operationId: ApplicationController_updateHelmAppValuesYaml
      parameters:
        - name: x-environment-id
          in: header
          required: true
          description: Environment ID is required
          schema:
            type: string
        - name: x-application-id
          in: header
          required: true
          description: Application ID is required
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HelmValuesYamlDto'
      responses:
        '201':
          description: 'Record updated successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      type: object
                      items:
                        $ref: '#/components/schemas/GitHubFileContent'
     
  /applications/deploy-stats:
    get:
      operationId: ApplicationController_getDeploymentStatistics
      parameters:
        - name: verrsionId
          in: query
          description: Version ID unqiuely identify the version
          schema:
            type: string
        - name: x-environment-id
          in: header
          description: Environment ID is required
          schema:
            type: string
        - name: x-application-id
          in: header
          description: Application ID is required
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          schema:
            type: string
      responses:
        '200':
          description: 'Record retrieved successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/DeploymentStatistics'
     
  /applications/soft:
    delete:
      operationId: ApplicationController_softDeleteApplication
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Record soft deleted successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        affected:
                          type: number
    
  /applications/hard:
    delete:
      operationId: ApplicationController_hardDeleteApplication
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Record hard deleted successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        affected:
                          type: number
     
  /applications/cloudFrontDistribution/{distributionId}:
    get:
      operationId: ApplicationController_getCloudFrontDistribution
      parameters:
        - name: x-environment-id
          in: header
          description: Environment ID is required
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          schema:
            type: string
        - name: distributionId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: 'Record retrieved successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        distribution:
                          type: object
                        

  /applications/deploy-stats/latest:
    get:
      operationId: ApplicationController_getLatestDeploymentsForApps
      parameters:
        - name: x-environment-id
          in: header
          description: Environment ID is required
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          schema:
            type: string
      responses:
        '200':
          description: 'Record retrieved successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/DeploymentStatistics'
     
  /applications/migrate-swagger-spec:
    patch:
      operationId: ApplicationController_migrateSwaggerSpec
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Record updated successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDto'

      
  /applications/releases:
    get:
      operationId: ApplicationController_getReleaseDetails
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          required: true
          in: header
          description: Project ID is required
          schema:
            type: string
      responses:
        '200':
          description: 'Record retrieved successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                        $ref: '#/components/schemas/ReleaseDataResponse'
      
  /applications/trigger-helm-pipelines:
    post:
      operationId: ApplicationController_triggerHelmPipline
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          required: true
          in: header
          description: Project ID is required
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerHelmPipelineDTO'
      responses:
        '201':
          description: 'Record created successfully'
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/ApiResponseDto'

  
  /applications/deployment-request:
    get:
      operationId: ApplicationController_deploymentRequest
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-application-id
          required: true
          in: header
          description: Application ID is required
          schema:
            type: string
        - name: x-environment-id
          required: true
          in: header
          description: Envrionment ID is required
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          required: true
          in: header
          description: Project ID is required
          schema:
            type: string
      responses:
        '200':
          description: 'Record retrieved successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                        $ref: '#/components/schemas/DeploymentRequests'
                  
  /application-data/{applicationId}/metadata:
    post:
      operationId: ApplicationDataController_createAppMetadata
      parameters:
        - name: applicationId
          required: true
          in: path
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string        
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppMetadataDto'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data: 
                        $ref: '#/components/schemas/AppMetadata'
    get:
      operationId: ApplicationDataController_findMetadataWithRelations
      parameters:
        - name: applicationId
          required: true
          in: path
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string        
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data: 
                        $ref: '#/components/schemas/AppMetadata'
    put:
      operationId: ApplicationDataController_updateAppMetadata
      parameters:
        - name: applicationId
          required: true
          in: path
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string        
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppMetadataDto'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data: 
                        $ref: '#/components/schemas/AppMetadata'
    delete:
      operationId: ApplicationDataController_deleteAppMetadata
      parameters:
        - name: applicationId
          required: true
          in: path
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string        
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDto'
  /application-data/metadata/filter:
    get:
      operationId: ApplicationDataController_filterMetadata
      parameters:
        - name: userId
          required: true
          in: query
          schema:
            type: string
        - name: teamId
          required: true
          in: query
          schema:
            type: number
        - name: label
          required: true
          in: query
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string        
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/AppMetadata'
  /application-data/{applicationId}/link:
    post:
      operationId: ApplicationDataController_createAppLink
      parameters:
        - name: applicationId
          required: true
          in: path
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string        
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppLinkDto'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data: 
                        $ref: '#/components/schemas/AppLink'
    get:
      operationId: ApplicationDataController_findAllLinksWithRelations
      parameters:
        - name: applicationId
          required: true
          in: path
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string        
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data:
                       type: array
                       items:
                          $ref: '#/components/schemas/AppLink'
                          
  /application-data/{applicationId}/labels:
    post:
      operationId: ApplicationDataController_updateLabels
      parameters:
        - name: applicationId
          required: true
          in: path
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string        
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppLabelDto'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data: 
                        $ref: '#/components/schemas/AppMetadata'
    put:
      operationId: ApplicationDataController_deleteLabel
      description: Originally a delete request but contains a request body so changed to put to accomodate Swagger
      parameters:
        - name: applicationId
          required: true
          in: path
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string        
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppLabelDto'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data: 
                        $ref: '#/components/schemas/AppMetadata'
                        
  /application-data/{applicationId}/link/{appLinkId}:
    get:
      operationId: ApplicationDataController_findLinkWithRelations
      parameters:
        - name: appLinkId
          required: true
          in: path
          schema:
            type: number
        - name: applicationId
          required: true
          in: path
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string        
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data: 
                        $ref: '#/components/schemas/AppLink'
    put:
      operationId: ApplicationDataController_updateAppLink
      parameters:
        - name: appLinkId
          required: true
          in: path
          schema:
            type: number
        - name: applicationId
          required: true
          in: path
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string        
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppLinkDto'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data: 
                        $ref: '#/components/schemas/AppLink'
    delete:
      operationId: ApplicationDataController_removeAppLink
      parameters:
        - name: appLinkId
          required: true
          in: path
          schema:
            type: number
        - name: applicationId
          required: true
          in: path
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string        
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDto'
                
  /application-ingress:
    post:
      operationId: ApplicationIngressController_create
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string        
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-environment-id
          in: header
          description: Environment ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplicationIngressDto'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data: 
                        $ref: '#/components/schemas/ApplicationIngress'
  /application-ingress/{applicationId}:
    get:
      operationId: ApplicationIngressController_findIngressWithRelations
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string 
        - name: applicationId
          in: path
          required: true
          schema:
            type: string       
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-environment-id
          in: header
          description: Environment ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ApplicationIngress'
  /application-ingress/{applicationId}/{id}:
    get:
      operationId: ApplicationIngressController_findIngressById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
        - name: applicationId
          required: true
          in: path
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string        
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-environment-id
          in: header
          description: Environment ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data: 
                        $ref: '#/components/schemas/ApplicationIngress'
    put:
      operationId: ApplicationIngressController_update
      parameters:
        - name: applicationId
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: number
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string        
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-environment-id
          in: header
          description: Environment ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplicationIngressDto'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data: 
                        $ref: '#/components/schemas/ApplicationIngress'
    delete:
      operationId: ApplicationIngressController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
        - name: applicationId
          required: true
          in: path
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string        
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-environment-id
          in: header
          description: Environment ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDto'
      
  /health:
    get:
      operationId: HealthController_check
      parameters: []
      responses:
        '200':
          description: The Health Check is successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  info:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  error:
                    type: object
                    example: {}
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  details:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
        '503':
          description: The Health Check is not successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  info:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  error:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  details:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                        
  /configurations:
    post:
      operationId: ConfigurationsController_create
      parameters: 
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-environment-id
          required: true
          in: header
          description: Envrionment ID is required
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          required: true
          in: header
          description: Project ID is required
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigMountDTO'
      responses:
        '201':
          description: 'Record created successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                        $ref: '#/components/schemas/Configuration'

    get:
      operationId: ConfigurationsController_getConfigurations
      parameters: 
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-environment-id
          required: true
          in: header
          description: Envrionment ID is required
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          required: true
          in: header
          description: Project ID is required
          schema:
            type: string
      responses:
        '200':
          description: 'Record retrieved successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/Configuration'
   
  /configurations/find:
    get:
      operationId: ConfigurationsController_find
      parameters: 
        - name: name
          in: query
          schema:
            type: string
        - name: configId
          in: query
          schema:
            type: string
        - name: isConfigRequired
          in: query
          schema:
            type: string  
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-environment-id
          required: true
          in: header
          description: Envrionment ID is required
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          required: true
          in: header
          description: Project ID is required
          schema:
            type: string
      responses:
        '200':
          description: 'Record retrieved successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                        $ref: '#/components/schemas/ExtendedConfigurationDTO'
    
  /configurations/update:
    patch:
      operationId: ConfigurationsController_update
      parameters: 
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-environment-id
          required: true
          in: header
          description: Envrionment ID is required
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          required: true
          in: header
          description: Project ID is required
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConfigMountDTO'
      responses:
        '200':
          description: 'Record updated successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDto'

   
  /configurations/soft:
    delete:
      operationId: ConfigurationsController_softDeleteConfiguration
      parameters: 
        - name: configId
          in: query
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-environment-id
          required: true
          in: header
          description: Envrionment ID is required
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          required: true
          in: header
          description: Project ID is required
          schema:
            type: string
      responses:
        '200':
          description: 'Record soft deleted successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                        type: object
                        properties:
                          affected:
                            type: number
 
  /configurations/templated-variables:
    get:
      operationId: ConfigurationsController_getTemplatedVariables
      parameters: 
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-environment-id
          required: true
          in: header
          description: Envrionment ID is required
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          required: true
          in: header
          description: Project ID is required
          schema:
            type: string
      responses:
        '200':
          description: 'Record retrieved successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                        type: array
                        items:
                          $ref: '#/components/schemas/TemplatedVariables'
      
    post:
      operationId: ConfigurationsController_createTemplatedVariables
      parameters: 
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-environment-id
          required: true
          in: header
          description: Envrionment ID is required
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          required: true
          in: header
          description: Project ID is required
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplatedVariableDTO'
      responses:
        '201':
          description: 'Record created successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                        type: array
                        items:
                          $ref: '#/components/schemas/TemplatedVariables'
  
  /configurations/templated-variables/{id}:
    put:
      operationId: ConfigurationsController_updateTemplatedVarible
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-environment-id
          required: true
          in: header
          description: Envrionment ID is required
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          required: true
          in: header
          description: Project ID is required
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplatedVariableDTO'
      responses:
        '200':
          description: 'Record updated successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/TemplatedVariables'
      
     
    delete:
      operationId: ConfigurationsController_deleteTemplatedVarible
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-environment-id
          required: true
          in: header
          description: Envrionment ID is required
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          required: true
          in: header
          description: Project ID is required
          schema:
            type: string
      responses:
        '200':
          description: 'Record deleted successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      type: string
  
  /configurations/secrets:
    post:
      operationId: ConfigurationsController_saveConfigSecrets
      parameters: 
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-environment-id
          required: true
          in: header
          description: Envrionment ID is required
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          required: true
          in: header
          description: Project ID is required
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigMountDTO'
      responses:
        '201':
          description: 'Record created successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Configuration'
   
 
  /projects:
    post:
      operationId: ProjectController_create
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-credential-id
          in: header
          description: Credential ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectDto'
      responses:
        '200':
          description: Organization updated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data: 
                        $ref: '#/components/schemas/Project'
  /projects/configAws:
    put:
      operationId: ProjectController_configureAws
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string        
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigureAwsDto'
      responses:
        '200':
          description: Updates Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDto'
  /projects/status:
    get:
      operationId: ProjectController_findProjectStatus
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string        
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDto'
  /projects/findAll:
    get:
      operationId: ProjectController_findAll
      summary: Get all projects related  to a organization.
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string        
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data: 
                        $ref: '#/components/schemas/Project'
  /projects/find:
    get:
      operationId: ProjectController_findOne
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string      
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data: 
                        $ref: '#/components/schemas/Project'

  /projects/update:
    patch:
      operationId: ProjectController_update
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string      
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectDto'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data: 
                        $ref: '#/components/schemas/Project'
  /projects/create-infra-repo:
    post:
      operationId: ProjectController_createInfrastructureRepository
      parameters:
        - name: x-credential-id
          in: header
          description: Credential ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInfraRepositoryDto'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDto'
  /projects/remove:
    delete:
      operationId: ProjectController_remove
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string      
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDto'
  /projects/soft:
    delete:
      operationId: ProjectController_softDeleteProject
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string      
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDto'
  /projects/hard:
    delete:
      operationId: ProjectController_hardDeleteProject
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string      
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDto'
  /projects/switchSecretManager:
    put:
      operationId: ProjectController_switchSecretManager
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string      
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchSecretManagerDto'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponseDto'
                  - type: object
                    properties:
                      data: 
                        $ref: '#/components/schemas/Project'
  /projects/create-github-actions-idp:
    post:
      operationId: ProjectController_createGithubActionsIdp
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string      
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-credential-id
          in: header
          description: Credential ID is required
          required: true
          schema:
            type: string            
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDto'
  /project-data/metadata:
    post:
      operationId: ProjectDataController_createProjectMetadata
      parameters: 
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          required: true
          in: header
          description: Project ID is required
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectMetadataDto'
      responses:
        '201':
          description: 'Record created successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ProjectMetadata'
    get:
      operationId: ProjectDataController_findMetadataWithRelations
      parameters: 
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          required: true
          in: header
          description: Project ID is required
          schema:
            type: string
      responses:
        '200':
          description: 'Record retrieved successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ProjectMetadata'
    put:
      operationId: ProjectDataController_updateAppMetadata
      parameters: 
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          required: true
          in: header
          description: Project ID is required
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectMetadataDto'
      responses:
        '200':
          description: 'Record updated successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ProjectMetadata'
    delete:
      operationId: ProjectDataController_deleteAppMetadata
      parameters: 
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          required: true
          in: header
          description: Project ID is required
          schema:
            type: string
      responses:
        '200':
          description: 'Record deleted successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDto'
 
  /project-data/link:
    post:
      operationId: ProjectDataController_createProjectLink
      parameters: 
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          required: true
          in: header
          description: Project ID is required
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectLinkDto'
      responses:
        '201':
          description: 'Record created successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ProjectLink'
    get:
      operationId: ProjectDataController_findAllLinksWithRelations
      parameters: 
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          required: true
          in: header
          description: Project ID is required
          schema:
            type: string
      responses:
        '200':
          description: 'Record retrieved successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/ProjectLink'
                      
  /project-data/link/{projectLinkId}:
    get:
      operationId: ProjectDataController_findLinkWithRelations
      parameters:
        - name: projectLinkId
          required: true
          in: path
          schema:
            type: number
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          required: true
          in: header
          description: Project ID is required
          schema:
            type: string
      responses:
        '200':
          description: 'Record retrieved successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ProjectLink'
    put:
      operationId: ProjectDataController_updateProjectLink
      parameters:
        - name: projectLinkId
          required: true
          in: path
          schema:
            type: number
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          required: true
          in: header
          description: Project ID is required
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectLinkDto'
      responses:
        '200':
          description: 'Record updated successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ProjectLink'
    delete:
      operationId: ProjectDataController_removeProjectLink
      parameters:
        - name: projectLinkId
          required: true
          in: path
          schema:
            type: number
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          required: true
          in: header
          description: Project ID is required
          schema:
            type: string
      responses:
        '200':
          description: 'Record deleted successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDto'
                      
  /project-data/{projectId}/labels:
    post:
      operationId: ProjectDataController_updateLabels
      parameters: 
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          required: true
          in: header
          description: Project ID is required
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectLabelDto'
      responses:
        '201':
          description: 'Record created successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ProjectMetadata'
    put:
      operationId: ProjectDataController_deleteLabels
      description: Originally a delete request in backend but contains request body so specified as Put request here.
      parameters: 
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
        - name: x-project-id
          required: true
          in: header
          description: Project ID is required
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectLabelDto'
      responses:
        '200':
          description: 'Record deleted successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ProjectMetadata'
                      
  /lambda-layers:
    get:
      operationId: LambdaLayersController_findLambdaLayers
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Record retrieved successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/LambdaLayers'

  /lambda-layers/layer/{version}:
    post:
      operationId: LambdaLayersController_removeLayer
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: version
          required: true
          in: path
          schema:
            type: number
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LambdaLayerDto'
      responses:
        '201':
          description: 'Record deleted successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/LambdaLayers'
     
  /lambda-layers/layer:
    post:
      operationId: LambdaLayersController_addLayer
      parameters:
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LambdaLayerDto'
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                LambdaLayerDto:
                  $ref: '#/components/schemas/LambdaLayerDto'
      responses:
        '201':
          description: 'Record created successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/LambdaLayers'
      
  /service-accounts:
    post:
      operationId: ServiceAccountController_create
      parameters: 
        - name: x-environment-id
          in: header
          required: true
          description: Envrironment id 
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAccountDTO'
      responses:
        '201':
          description: 'Record created successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ServiceAccount'
    get:
      operationId: ServiceAccountController_getServiceAccounts
      parameters: 
        - name: x-environment-id
          in: header
          description: Envrironment id 
          required: true
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Record retrieved successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/ServiceAccount'
    put:
      operationId: ServiceAccountController_update
      parameters: 
        - name: x-environment-id
          in: header
          description: Envrironment id 
          required: true
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServiceAccountDTO'
      responses:
        '200':
          description: 'Record updated successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDto'

  /service-accounts/find:
    get:
      operationId: ServiceAccountController_find
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: serviceAccountId
          in: query
          required: false
          schema:
            type: string
        - name: isServiceAccountRequired
          in: query
          required: false
          schema:
            type: boolean
        - name: isProjectRequired
          in: query
          required: false
          schema:
            type: boolean
        - name: x-environment-id
          in: header
          description: Envrironment id 
          required: true
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Record retrieved successfully'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponseDto'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/ExtendedServiceAccountDTO'
          
  /service-accounts/{id}:
    delete:
      operationId: ServiceAccountController_deleteServiceAccount
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: x-environment-id
          in: header
          description: Envrironment id 
          required: true
          schema:
            type: string
        - name: x-trace-id
          in: header
          description: Trace id to unqiuely identify the request
          schema:
            type: string
        - name: x-project-id
          in: header
          description: Project ID is required
          required: true
          schema:
            type: string
        - name: x-organization-id
          in: header
          description: Organization ID is required
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Record deleted successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDto'

         
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    CreateOrganizationDto:
      type: object
      properties:
        name:
          type: string
        country:
          type: string
        isTermsAgreed:
          type: boolean
        flow:
          type: string
      required:
        - name
        - country
        - isTermsAgreed
        - flow
    GetOrganizationsDTO:
      type: object
      properties:
        orgIds:
          type: array
          items:
            type: string
      required:
        - orgIds
    ApiResponseDto:
      type: object
      properties:
        success:
          type: boolean
          default: true
        data:
          nullable: true
          type: object
        message:
          type: string
          nullable: true
      required:
        - success
        - data
        - message
    UpdateOrganizationDto:
      type: object
      properties:
        name:
          type: string
        country:
          type: string
        templates:
          type: object
        description:
          type: string
      required:
        - name
        - country
        - templates
        - description
    CreateProjectDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        defaultNamespaces:
          type: object
        vcsOrganizationName:
          type: string
        vcsUserName:
          type: string
        repositoryName:
          type: string
        branchName:
          type: string
        flow:
          type: string
        privateFlowConfig:
          type: object
        autoGenerateEnvironments:
          type: boolean
        template:
          type: object
        projectCreationType:
          type: object
      required:
        - name
        - repositoryName
        - branchName
        - flow
        - privateFlowConfig
        - projectCreationType
    ConfigureAwsDto:
      type: object
      properties:
        credentials:
          type: object
        region:
          type: string
        reset:
          type: boolean
      required:
        - credentials
    UpdateProjectDto:
      type: object
      properties:
        name:
          type: string
        credentialId:
          type: string
        description:
          type: string
        flow:
          type: string
    CreateInfraRepositoryDto:
      type: object
      properties:
        vcsOrganizationName:
          type: string
        vcsUserName:
          type: string
        infraRepositoryName:
          type: string
        branch:
          type: string
      required:
        - infraRepositoryName
    switchSecretManagerDto:
      type: object
      properties:
        flow:
          type: object
        region:
          type: string
        arn:
          type: string
        provider:
          type: string
      required:
        - flow
    CreateEnvironmentDto:
      type: object
      properties:
        name:
          type: string
          maxLength: 40
        description:
          type: string
        kustomizeOverlayPath:
          type: string
        flow:
          type: string
        isDev:
          type: boolean
          default: false
        isProd:
          type: boolean
          default: false
        isStaging:
          type: boolean
          default: false
        isTest:
          type: boolean
          default: false
        rightConnections:
          type: array
          items:
            type: string
        leftConnections:
          type: array
          items:
            type: string
        defaultNamespace:
          type: string
        namespaces:
          type: array
          items:
            type: string
        orderIndex:
          type: number
        triggers:
          type: array
          items:
            type: object
      required:
        - name
        - defaultNamespace
    UpdateEnvironmentDto:
      type: object
      properties:
        addNamespaces:
          type: array
          items:
            type: string
        removeNamespaces:
          type: array
          items:
            type: string
        name:
          type: string
          maxLength: 40
        description:
          type: string
        kustomizeOverlayPath:
          type: string
        flow:
          type: string
        isDev:
          type: boolean
          default: false
        isProd:
          type: boolean
          default: false
        isStaging:
          type: boolean
          default: false
        isTest:
          type: boolean
          default: false
        rightConnections:
          type: array
          items:
            type: string
        leftConnections:
          type: array
          items:
            type: string
        defaultNamespace:
          type: string
        namespaces:
          type: array
          items:
            type: string
        orderIndex:
          type: number
        triggers:
          type: array
          items:
            type: object
    ApiSpec:
      type: object
      properties:
        gitPath:
          type: string
        urlPath:
          type: string
    ApplicationPortDTO:
      type: object
      properties:
        protocol:
          type: string
        port:
          type: number
        targetPort:
          type: number
        apiSpec:
          $ref: '#/components/schemas/ApiSpec'
    HttpHeadersDTO:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    HttpGetDTO:
      type: object
      properties:
        path:
          type: string
        port:
          type: number
        httpHeaders:
          type: array
          items:
            $ref: '#/components/schemas/HttpHeadersDTO'
        scheme:
          type: string
    HealthCheckDTO:
      type: object
      properties:
        initialDelaySeconds:
          type: number
        timeoutSeconds:
          type: number
        periodSeconds:
          type: number
        successThreshold:
          type: number
        failureThreshold:
          type: number
        httpGet:
          $ref: '#/components/schemas/HttpGetDTO'
        tcpSocket:
          type: object
          properties:
            port:
              type: number
        exec:
          type: object
          properties:
            command:
              type: array
              items:
                type: string
        grpc:
          type: object
          properties:
            port:
              type: number
            service:
              type: string
        probeType:
          type: array
          items:
            type: string
      required:
        - tcpSocket
        - exec
        - grpc
    ConfigMountDTO:
      type: object
      properties:
        name:
          type: string
        namespace:
          type: string
        isSecret:
          type: boolean
        isTemplated:
          type: boolean
        mountType:
          type: string
        config:
          type: object
      required:
        - name
        - namespace
        - isSecret
        - isTemplated
        - mountType
        - config
    CommitDetailsDTO:
      type: object
      properties:
        commitHash:
          type: string
        commitTime:
          type: string
        commitUser:
          type: string
        commitMessage:
          type: string
        commitAvatar:
          type: string
    ApplicationContainerDTO:
      type: object
      properties:
        name:
          type: string
        applicationPorts:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationPortDTO'
        imageRegistry:
          type: string
        imageTag:
          type: string
        cpuRequestMili:
          type: number
        cpuLimitMili:
          type: number
        memoryRequestMb:
          type: number
        memoryLimitMb:
          type: number
        command:
          type: array
          items:
            type: string
        args:
          type: array
          items:
            type: string
        healthChecks:
          type: array
          items:
            $ref: '#/components/schemas/HealthCheckDTO'
        configMounts:
          type: array
          items:
            $ref: '#/components/schemas/ConfigMountDTO'
        imagePullPolicy:
          type: string
        commitDetails:
          $ref: '#/components/schemas/CommitDetailsDTO'
        imagePullSecret:
          type: string
        credentialId:
          type: string
    TolerationDTO:
      type: object
      properties:
        key:
          type: string
        operator:
          type: string
        value:
          type: string
        effect:
          type: string
    AutoScalingRulesDTO:
      type: object
      properties:
        ruleType:
          type: string
        percentage:
          type: number
    VolumeMountDTO:
      type: object
      properties:
        containerName:
          type: string
        mountPath:
          type: string
    VolumeDTO:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        pvc:
          type: object
          properties:
            claimName:
              type: string
            yamlFilePath:
              type: string
        hostPath:
          type: object
          properties:
            path:
              type: string
        nfs:
          type: object
          properties:
            server:
              type: string
            path:
              type: string
        volumeMounts:
          type: array
          items:
            $ref: '#/components/schemas/VolumeMountDTO'
      required:
        - pvc
        - hostPath
        - nfs
    ApplicationConfigSpecDTO:
      type: object
      properties:
        type:
          type: string
        applicationContainers:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationContainerDTO'
        tolerations:
          type: array
          items:
            $ref: '#/components/schemas/TolerationDTO'
        minReplicas:
          type: number
        maxReplicas:
          type: number
        serviceAccountName:
          type: string
        terminationGracePeriodSeconds:
          type: number
        nodeSelector:
          type: object
        serviceType:
          type: string
        namespace:
          type: string
        cronTab:
          type: string
        suspend:
          type: boolean
        ttlSecondsAfterFinished:
          type: number
        name:
          type: string
        labels:
          type: object
        horizontalAutoScalingRules:
          type: array
          items:
            $ref: '#/components/schemas/AutoScalingRulesDTO'
        volumes:
          type: array
          items:
            $ref: '#/components/schemas/VolumeDTO'
        version:
          type: string
    CreateDeploymentAppDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        type:
          type: string
        source:
          type: string
        swaggerSpecPaths:
          type: array
          items:
            type: object
        appConfigSpec:
          $ref: '#/components/schemas/ApplicationConfigSpecDTO'
        appVersion:
          type: object
        workflowConfig:
          type: object
        imageConfig:
          type: object
        triggers:
          type: object
        namespaces:
          type: object
        scanSeverity:
          type: array
          items:
            type: string
      required:
        - name
        - description
        - type
        - source
        - appConfigSpec
        - appVersion
    CreateCronJobAppDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        type:
          type: string
        source:
          type: string
        appConfigSpec:
          $ref: '#/components/schemas/ApplicationConfigSpecDTO'
        appVersion:
          type: object
        workflowConfig:
          type: object
        triggers:
          type: object
        namespaces:
          type: object
        scanSeverity:
          type: array
          items:
            type: string
      required:
        - name
        - description
        - type
        - source
        - appConfigSpec
        - appVersion
        - workflowConfig
    CreateWebAppDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        type:
          type: string
        source:
          type: string
        appVersion:
          type: object
        host:
          type: string
        hostConfigs:
          type: object
        webAppConfig:
          type: object
        triggers:
          type: object
      required:
        - name
        - description
        - type
        - source
        - appVersion
        - host
        - hostConfigs
        - webAppConfig
    UpdateWebAppDto:
      type: object
      properties:
        operation:
          type: string
          enum:
            - UPDATE_DOMAIN_WITH_CERTIFICATE
        domainName:
          type: string
        certificateId:
          type: number
        certificateArn:
          type: string
        dnsRecordId:
          type: number
        versionId:
          type: string
        region:
          type: string
      required:
        - operation
        - domainName
        - certificateId
        - certificateArn
        - dnsRecordId
    CreateSSRWebAppDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        type:
          type: string
        source:
          type: string
        appVersion:
          type: object
        config:
          type: object
        triggers:
          type: object
      required:
        - name
        - description
        - type
        - source
        - appVersion
        - config
    CreateEC2CronJobAppDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        type:
          type: string
        source:
          type: string
        appVersion:
          type: object
        ec2CronJobConfig:
          type: object
        triggers:
          type: object
        scanSeverity:
          type: array
          items:
            type: string
      required:
        - name
        - description
        - type
        - source
        - appVersion
        - ec2CronJobConfig
    CreateLambdaAppDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        type:
          type: string
        source:
          type: string
        appVersion:
          type: object
        dockerLambdaConfig:
          type: object
        zipLambdaConfig:
          type: object
        triggers:
          type: object
      required:
        - name
        - description
        - type
        - source
        - appVersion
    CreateSourceToDockerToHelmAppDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        type:
          type: string
        source:
          type: string
        appVersion:
          type: object
        dockerHelmConfig:
          type: object
        triggers:
          type: object
      required:
        - name
        - description
        - type
        - source
        - appVersion
    CreateGenericDockerAppDTO:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        type:
          type: string
        source:
          type: string
        appVersion:
          type: object
        genericDockerConfig:
          type: object
        triggers:
          type: object
      required:
        - name
        - description
        - type
        - source
        - appVersion
        - genericDockerConfig
    CreateHelmChartAppDTO:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        type:
          type: string
        source:
          type: string
        appVersion:
          type: object
        helmChartConfig:
          type: object
        namespaces:
          type: object
        scanSeverity:
          type: array
          items:
            type: string
        overrideValuePaths:
          type: array
          items:
            type: string
      required:
        - name
        - description
        - type
        - source
        - appVersion
        - helmChartConfig
    CreateSamAppDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        type:
          type: string
        source:
          type: string
        appVersion:
          type: object
        config:
          type: object
        triggers:
          type: object
      required:
        - name
        - description
        - type
        - source
        - appVersion
        - config
    CreateCustomAppDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        type:
          type: string
        source:
          type: string
        appVersion:
          type: object
        config:
          type: object
        triggers:
          type: object
      required:
        - name
        - description
        - type
        - source
        - appVersion
        - config
    ConfigMount:
      type: object
      properties:
        mountPath:
          type: string
        isFile:
          type: boolean
        configMapName:
          type: string
        secretName:
          type: string
        key:
          type: string
        isEnv:
          type: boolean
      required:
        - mountPath
        - isFile
        - configMapName
        - secretName
        - key
        - isEnv
    ApplicationPortConfig:
      type: object
      properties:
        protocol:
          type: string
        port:
          type: number
        targetPort:
          type: number
        apiSpec:
          $ref: '#/components/schemas/ApiSpec'
      required:
        - protocol
        - port
        - targetPort
        - apiSpec
    HttpHeadersConfig:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      required:
        - name
        - value
    HttpGetConfig:
      type: object
      properties:
        path:
          type: string
        port:
          type: number
        httpHeaders:
          type: array
          items:
            $ref: '#/components/schemas/HttpHeadersConfig'
        scheme:
          type: string
      required:
        - path
        - port
        - httpHeaders
        - scheme
    HealthCheckConfig:
      type: object
      properties:
        initialDelaySeconds:
          type: number
        timeoutSeconds:
          type: number
        periodSeconds:
          type: number
        successThreshold:
          type: number
        failureThreshold:
          type: number
        httpGet:
          $ref: '#/components/schemas/HttpGetConfig'
        tcpSocket:
          type: object
          properties:
            port:
              type: number
        exec:
          type: object
          properties:
            command:
              type: array
              items:
                type: string
        grpc:
          type: object
          properties:
            port:
              type: number
            service:
              type: string
        probeType:
          type: array
          items:
            type: string
      required:
        - initialDelaySeconds
        - timeoutSeconds
        - periodSeconds
        - successThreshold
        - failureThreshold
        - httpGet
        - tcpSocket
        - exec
        - grpc
        - probeType
    CommitDetails:
      type: object
      properties:
        commitHash:
          type: string
        commitTime:
          type: string
        commitUser:
          type: string
        commitMessage:
          type: string
        commitAvatar:
          type: string
    ContainerConfig:
      type: object
      properties:
        name:
          type: string
        imageRegistry:
          type: string
        imageTag:
          type: string
          default: latest
        cpuRequestMili:
          type: number
          default: 100
        cpuLimitMili:
          type: number
          default: 200
        memoryRequestMb:
          type: number
          default: 100
        memoryLimitMb:
          type: number
          default: 200
        args:
          default: []
          type: array
          items:
            type: string
        command:
          default: []
          type: array
          items:
            type: string
        configMounts:
          default: []
          type: array
          items:
            $ref: '#/components/schemas/ConfigMount'
        applicationPorts:
          default: []
          type: array
          items:
            $ref: '#/components/schemas/ApplicationPortConfig'
        healthChecks:
          default: []
          type: array
          items:
            $ref: '#/components/schemas/HealthCheckConfig'
        imagePullPolicy:
          type: string
        commitDetails:
          $ref: '#/components/schemas/CommitDetails'
        imagePullSecretName:
          type: string
        credentialId:
          type: string
      required:
        - name
        - imageRegistry
        - imageTag
        - cpuRequestMili
        - cpuLimitMili
        - memoryRequestMb
        - memoryLimitMb
        - args
        - command
        - configMounts
        - applicationPorts
        - healthChecks
    Toleration:
      type: object
      properties:
        key:
          type: string
        operator:
          type: string
        value:
          type: string
        effect:
          type: string
      required:
        - key
        - operator
        - value
        - effect
    AutoScalingRulesConfig:
      type: object
      properties:
        ruleType:
          type: string
        percentage:
          type: number
      required:
        - ruleType
        - percentage
    VolumeMountConfig:
      type: object
      properties:
        containerName:
          type: string
        mountPath:
          type: string
      required:
        - containerName
        - mountPath
    VolumeConfig:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        pvc:
          type: object
          properties:
            claimName:
              type: string
            yamlFilePath:
              type: string
          required:
            - claimName
            - yamlFilePath
        hostPath:
          type: object
          properties:
            path:
              type: string
          required:
            - path
        nfs:
          type: object
          properties:
            server:
              type: string
            path:
              type: string
          required:
            - path
            - server
        volumeMounts:
          type: array
          items:
            $ref: '#/components/schemas/VolumeMountConfig'
      required:
        - name
        - type
        - pvc
        - hostPath
        - nfs
        - volumeMounts
    ApplicationConfigSpec:
      type: object
      properties:
        type:
          type: string
        applicationContainers:
          default:
            - imageTag: latest
              cpuRequestMili: 100
              cpuLimitMili: 200
              memoryRequestMb: 100
              memoryLimitMb: 200
              args: []
              command: []
              configMounts: []
              applicationPorts: []
              healthChecks: []
          type: array
          items:
            $ref: '#/components/schemas/ContainerConfig'
        tolerations:
          type: array
          items:
            $ref: '#/components/schemas/Toleration'
        minReplicas:
          type: number
          default: 1
        maxReplicas:
          type: number
          default: 1
        serviceAccountName:
          type: string
        terminationGracePeriodSeconds:
          type: number
          default: 60
        nodeSelector:
          type: object
          default: {}
        serviceType:
          type: string
        namespace:
          type: string
        cronTab:
          type: string
        suspend:
          type: boolean
          default: false
        ttlSecondsAfterFinished:
          type: number
          default: 0
        name:
          type: string
        labels:
          type: object
          default: {}
        version:
          type: string
        horizontalAutoScalingRules:
          default: []
          type: array
          items:
            $ref: '#/components/schemas/AutoScalingRulesConfig'
        volumes:
          default: []
          type: array
          items:
            $ref: '#/components/schemas/VolumeConfig'
      required:
        - type
        - applicationContainers
        - tolerations
        - minReplicas
        - maxReplicas
        - serviceAccountName
        - terminationGracePeriodSeconds
        - nodeSelector
        - serviceType
        - namespace
        - cronTab
        - suspend
        - ttlSecondsAfterFinished
        - name
        - labels
        - version
        - horizontalAutoScalingRules
        - volumes
    UpdateConfigurationDTO:
      type: object
      properties:
        spec:
          $ref: '#/components/schemas/ApplicationConfigSpec'
        versionId:
          type: string
        originalCommitId:
          type: string
      required:
        - spec
        - versionId
    ApplicationDeployDTO:
      type: object
      properties:
        appVersionId:
          type: string
        imageRegistryURL:
          type: string
        tag:
          type: string
        containerName:
          type: string
        shouldDeploy:
          type: string
        pipelineRunId:
          type: string
        commitDetails:
          $ref: '#/components/schemas/CommitDetailsDTO'
        helmUpdateValues:
          type: array
          items:
            type: object
      required:
        - appVersionId
        - imageRegistryURL
        - tag
        - containerName
        - shouldDeploy
        - pipelineRunId
        - commitDetails
    MultipleDeployDTO:
      type: object
      properties:
        appVersionId:
          type: string
        containers:
          type: array
          items:
            type: object
        shouldDeploy:
          type: string
        pipelineRunId:
          type: string
      required:
        - appVersionId
        - containers
        - shouldDeploy
        - pipelineRunId
    ApplicationRedeployDTO:
      type: object
      properties:
        appVersionId:
          type: string
        gitopsCommitHash:
          type: string
        gitopsCommitMessage:
          type: string
        commitDetails:
          $ref: '#/components/schemas/CommitDetailsDTO'
        containerName:
          type: string
      required:
        - appVersionId
        - gitopsCommitHash
        - gitopsCommitMessage
        - commitDetails
        - containerName
    CreateWorkflowDto:
      type: object
      properties:
        workflowConfig:
          type: object
        triggers:
          type: object
    HelmValueUpdateDto:
      type: object
      properties:
        helmUpdateValues:
          type: array
          items:
            type: object
    HelmValuesYamlDto:
      type: object
      properties:
        valuesYaml:
          type: string
    TriggerHelmPipelineDTO:
      type: object
      properties:
        helmAppId:
          type: string
      required:
        - helmAppId
    UpdateConfigMountDTO:
      type: object
      properties:
        name:
          type: string
        namespace:
          type: string
        config:
          type: object
      required:
        - name
    TemplatedVariableDTO:
      type: object
      properties:
        config:
          type: object
      required:
        - config
    CreateAppMetadataDto:
      type: object
      properties:
        owners:
          type: array
          items:
            type: string
        ownerTeams:
          type: array
          items:
            type: number
        labels:
          type: array
          items:
            type: string
        swaggerSpecPaths:
          type: array
          items:
            type: object
    UpdateAppMetadataDto:
      type: object
      properties:
        defaultNamespaces:
          type: object
    CreateAppLinkDto:
      type: object
      properties:
        documentName:
          type: string
        url:
          type: string
        documentType:
          type: number
      required:
        - documentName
        - url
        - documentType
    UpdateAppLabelDto:
      type: object
      properties:
        label:
          type: string
      required:
        - label
    UpdateAppLinkDto:
      type: object
      properties: {}
    IngressMetadata:
      type: object
      properties:
        name:
          type: string
          description: Name of the Ingress
          example: example-ingress
        namespace:
          type: string
          description: Namespace of the Ingress
          example: your-namespace
        annotations:
          type: object
          description: Additional annotations for the Ingress
        labels:
          type: object
          description: Additional labels for the Ingress
      required:
        - name
        - namespace
    IngressTLS:
      type: object
      properties:
        secretName:
          type: string
          description: Name of the TLS secret
          example: tls-secret
        hosts:
          type: array
          items:
            type: string
    Port:
      type: object
      properties:
        number:
          type: number
          description: Port number for the Ingress rule
          example: 80
      required:
        - number
    Service:
      type: object
      properties:
        name:
          type: string
          description: service name for ingress path
          example: front-end
        port:
          description: Port settings for the Ingress rule
          allOf:
            - $ref: '#/components/schemas/Port'
      required:
        - name
        - port
    Backend:
      type: object
      properties:
        service:
          description: Service settings for the Ingress rule
          allOf:
            - $ref: '#/components/schemas/Service'
      required:
        - service
    IngressRulePath:
      type: object
      properties:
        path:
          type: string
          description: Path for the Ingress rule
          example: /
        pathType:
          type: string
          description: Path type for the Ingress rule
          example: ImplementationSpecific
        backend:
          description: backend settings for the Ingress rule
          allOf:
            - $ref: '#/components/schemas/Backend'
      required:
        - path
        - pathType
        - backend
    IngressRule:
      type: object
      properties:
        host:
          type: string
          description: Host for the Ingress rule
          example: example.com
        http:
          description: HTTP settings for the Ingress rule
          allOf:
            - $ref: '#/components/schemas/IngressRulePath'
      required:
        - host
        - http
    IngressHttp:
      type: object
      properties:
        paths:
          description: Paths for the Ingress
          type: array
          items:
            $ref: '#/components/schemas/IngressRulePath'
      required:
        - paths
    IngressSpec:
      type: object
      properties:
        tls:
          description: TLS settings for the Ingress
          type: array
          items:
            $ref: '#/components/schemas/IngressTLS'
        rules:
          description: Rules for the Ingress
          type: array
          items:
            $ref: '#/components/schemas/IngressRule'
        http:
          description: HTTP settings for the Ingress
          allOf:
            - $ref: '#/components/schemas/IngressHttp'
      required:
        - rules
    IngressDto:
      type: object
      properties:
        apiVersion:
          type: string
          description: API version of the Ingress
          example: networking.k8s.io/v1
        kind:
          type: string
          description: Type of resource
          example: Ingress
        metadata:
          description: Metadata for the Ingress
          allOf:
            - $ref: '#/components/schemas/IngressMetadata'
        spec:
          description: Specification for the Ingress
          allOf:
            - $ref: '#/components/schemas/IngressSpec'
      required:
        - apiVersion
        - kind
        - metadata
    CreateApplicationIngressDto:
      type: object
      properties:
        applicationId:
          type: string
          description: Application Id
        ingressData:
          description: Ingress Data
          allOf:
            - $ref: '#/components/schemas/IngressDto'
      required:
        - applicationId
        - ingressData
    UpdateApplicationIngressDto:
      type: object
      properties: {}
    CreateProjectMetadataDto:
      type: object
      properties:
        labels:
          type: array
          items:
            type: string
    UpdateProjectMetadataDto:
      type: object
      properties: {}
    CreateProjectLinkDto:
      type: object
      properties:
        documentName:
          type: string
        url:
          type: string
        documentType:
          type: number
      required:
        - documentName
        - url
        - documentType
    UpdateProjectLinkDto:
      type: object
      properties: {}
    UpdateProjectLabelDto:
      type: object
      properties:
        label:
          type: string
      required:
        - label
    LambdaLayerDto:
      type: object
      properties:
        layerName:
          type: string
        description:
          type: string
    ServiceAccountDTO:
      type: object
      properties:
        name:
          type: string
        namespace:
          type: string
        serviceAccount:
          type: object
      required:
        - name
        - namespace
        - serviceAccount
    UpdateServiceAccountDTO:
      type: object
      properties:
        name:
          type: string
        namespace:
          type: string
        serviceAccount:
          type: object
      required:
        - name
    Environment:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the environment with a prefix.
        project:
          $ref: '#/components/schemas/Project'
        description:
          type: string
          maxLength: 100
          nullable: true
        organizationId:
          type: string
          maxLength: 100
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: string
          maxLength: 100
          nullable: true
        kustomizeOverlayPath:
          type: string
          maxLength: 100
        isDev:
          type: boolean
          default: false
        isProd:
          type: boolean
          default: false
        isStaging:
          type: boolean
          default: false
        isTest:
          type: boolean
          default: false
        rightConnections:
          type: array
          items:
            type: string
          nullable: true
        leftConnections:
          type: array
          items:
            type: string
          nullable: true
        orderIndex:
          type: integer
          nullable: true
        defaultNamespace:
          type: string
          maxLength: 100
        namespaces:
          type: array
          items:
            type: string
          nullable: true
        triggers:
          type: array
          items:
            $ref: '#/components/schemas/Trigger'
          nullable: true
        serviceAccountId:
          type: string
          maxLength: 100
          nullable: true
        ingress:
          $ref: '#/components/schemas/ApplicationIngress'
        configurations:
          type: array
          items:
            $ref: '#/components/schemas/Configuration'
        templatedVariables:
          type: array
          items:
            $ref: '#/components/schemas/TemplatedVariables'
        deletedAt:
          type: string
          format: date-time
          nullable: true
    Trigger:
      type: object
      properties:
        on:
          type: string
          description: Event or condition that triggers the action.
        branches:
          type: array
          items:
            type: string
          description: List of branches associated with the trigger.
          nullable: true
        tags:
          type: array
          items:
            type: string
          description: List of tags associated with the trigger.
          nullable: true
        paths:
          type: array
          items:
            type: string
          description: List of paths associated with the trigger.
          nullable: true
        schedule:
          type: array
          items:
            type: string
          description: List of schedules or cron expressions for the trigger.
          nullable: true
      required:
        - on
    ApplicationIngress:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Unique identifier for the ApplicationIngress entity.
        name:
          type: string
          description: Name of the ingress. Defaults to 'sample-name'.
        ingressData:
          type: object
          additionalProperties: true
          description: JSON object containing ingress-specific data.
          nullable: true
        yamlPath:
          type: string
          description: Path to the YAML configuration file for the ingress.
          nullable: true
        application:
          $ref: '#/components/schemas/Application'
        environment:
          $ref: '#/components/schemas/Environment'
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the ingress was created.
          nullable: true
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the ingress was last updated.
          nullable: true
        createdBy:
          type: string
          description: User who created the ingress.
          nullable: true
        updatedBy:
          type: string
          description: User who last updated the ingress.
          nullable: true
      required:
        - id
        - name
        - application
        - environment
        
    Configuration:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the Configuration entity.
        name:
          type: string
          description: Name of the configuration.
        isSecret:
          type: boolean
          description: Indicates whether the configuration is secret.
        isTemplated:
          type: boolean
          description: Indicates whether the configuration is templated.
          default: false
        namespace:
          type: string
          description: Namespace for the configuration.
        mountType:
          type: string
          description: Type of mount for the configuration.
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the configuration was created.
          nullable: true
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the configuration was last updated.
          nullable: true
        createdBy:
          type: string
          description: User who created the configuration.
        updatedBy:
          type: string
          description: User who last updated the configuration.
          nullable: true
        kustomizeOverlayPath:
          type: string
          description: Path to the kustomize overlay configuration.
        environment:
          $ref: '#/components/schemas/Environment'
        organizationId:
          type: string
          description: Identifier for the organization.
        projectId:
          type: string
          description: Identifier for the project.
        deletedAt:
          type: string
          format: date-time
          description: Timestamp when the configuration was soft deleted.
          nullable: true
      required:
        - id
        - name
        - isSecret
        - namespace
        - mountType
        - kustomizeOverlayPath
        - environment
        - organizationId
        - projectId
        
    TemplatedVariables:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the TemplatedVariables entity.
        organizationId:
          type: string
          description: Identifier for the organization.
        projectId:
          type: string
          description: Identifier for the project.
        environment:
          $ref: '#/components/schemas/Environment'
        variable:
          type: string
          description: Name of the variable.
        value:
          type: string
          description: Value of the variable.
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the variable was created.
          nullable: true
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the variable was last updated.
          nullable: true
        createdBy:
          type: string
          description: User who created the variable.
        updatedBy:
          type: string
          description: User who last updated the variable.
          nullable: true
      required:
        - id
        - organizationId
        - projectId
        - environment
        - variable
        - value
        - createdBy
        
    Project:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the project with a prefix.
        description:
          type: string
          maxLength: 500
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: string
          maxLength: 100
          nullable: true
        organization:
          $ref: '#/components/schemas/Organization'
        environments:
          type: array
          items:
            $ref: '#/components/schemas/Environment'
        gitopsCredentialId:
          type: string
          maxLength: 100
        gitopsRepoName:
          type: string
          maxLength: 100
        gitopsDefaultBranch:
          type: string
          maxLength: 100
        gitopsVcsOrganizationName:
          type: string
          maxLength: 100
          nullable: true
        gitopsVcsUserName:
          type: string
          maxLength: 100
          nullable: true
        gitopsRepoId:
          type: string
          maxLength: 100
          nullable: true
        gitopsOwnerId:
          type: string
          maxLength: 100
          nullable: true
        infraCredentialId:
          type: string
          maxLength: 100
          nullable: true
        infraRepoName:
          type: string
          maxLength: 100
          nullable: true
        infraDefaultBranch:
          type: string
          maxLength: 100
          nullable: true
        infraVcsOrganizationName:
          type: string
          maxLength: 100
          nullable: true
        infraVcsUserName:
          type: string
          maxLength: 100
          nullable: true
        flow:
          type: string
          maxLength: 100
          nullable: true
        applications:
          type: array
          items:
            $ref: '#/components/schemas/Application'
        awsConfig:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AWSConfig'
          nullable: true
        projectLinks:
          type: array
          items:
            $ref: '#/components/schemas/ProjectLink'
        metadata:
          $ref: '#/components/schemas/ProjectMetadata'
        status:
          type: string
          maxLength: 100
          enum:
            - pending
            - db_saved
            - repo_created
            - pushed
            - completed
            - failed
          default: db_saved
        deletedAt:
          type: string
          format: date-time
          nullable: true
        
    WebAppRequirements:
      type: object
      properties:
        required:
          type: array
          items:
            type: string
          description: List of required web application features.

    AWSConfig:
      type: object
      properties:
        s3BucketName:
          type: string
          description: The name of the S3 bucket.
          nullable: true
        originAccessIdentity:
          type: string
          description: The origin access identity for the AWS setup.
          nullable: true
        credentialId:
          type: string
          description: The credential ID for accessing AWS services.
          nullable: true
        webAppRequirements:
          $ref: '#/components/schemas/WebAppRequirements'

    Templates:
      type: object
      properties:
        autoGenerateEnvironments:
          type: boolean
          description: Whether to auto-generate environments.
        defaultTemplate:
          type: string
          description: Default template configuration.
        templateSet:
          type: array
          items:
            type: string
          description: Set of template configurations.

    Organization:
      type: object
      properties:
        id:
          type: string
          description: Primary key for the Organization entity.
        country:
          type: string
          description: Country of the organization.
        createdBy:
          type: string
          description: Creator of the organization.
          nullable: true
        description:
          type: string
          description: Description of the organization.
          nullable: true
        templates:
          $ref: '#/components/schemas/Templates'
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp.
        updatedAt:
          type: string
          format: date-time
          description: Update timestamp.
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
          description: List of projects associated with the organization.
        isTermsAgreed:
          type: boolean
          description: Whether the terms have been agreed to.
        deletedAt:
          type: string
          format: date-time
          description: Deletion timestamp.
          nullable: true

    Application:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the application.
        name:
          type: string
          maxLength: 100
          description: Name of the application.
        description:
          type: string
          maxLength: 500
          nullable: true
          description: Description of the application.
        kustomizeBasePath:
          type: string
          maxLength: 100
          nullable: true
          description: Base path for kustomize.
        type:
          type: string
          maxLength: 100
          description: Type of the application.
        source:
          type: string
          maxLength: 100
          nullable: true
          description: Source of the application.
        project:
          $ref: '#/components/schemas/Project'
        createdAt:
          type: string
          format: date-time
          description: Date and time when the application was created.
        updatedAt:
          type: string
          format: date-time
          description: Date and time when the application was last updated.
        organizationId:
          type: string
          maxLength: 100
          description: Identifier of the organization.
        versions:
          type: array
          items:
            $ref: '#/components/schemas/Version'
        appLinks:
          type: array
          items:
            $ref: '#/components/schemas/AppLink'
          description: Links related to the application.
        metadata:
          $ref: '#/components/schemas/AppMetadata'
        ingress:
          $ref: '#/components/schemas/ApplicationIngress'
        deletedAt:
          type: string
          format: date-time
          nullable: true
          description: Date and time when the application was deleted.
        createdBy:
          type: string
          maxLength: 100
          nullable: true
          description: Identifier of the user who created the application.
    
    AppMetadata:
      type: object
      properties:
        id:
          type: integer
          description: Primary key for the AppMetadata entity.
        owners:
          type: array
          items:
            type: string
          description: List of owners.
          default: []
        ownerTeams:
          type: array
          items:
            type: integer
          description: List of owner team IDs.
          default: []
        labels:
          type: array
          items:
            type: string
          description: List of labels.
          default: []
        swaggerSpecPaths:
          type: array
          items:
            $ref: '#/components/schemas/SwaggerSpecDto'
          description: List of Swagger specification paths.
          default: []
        features:
          type: array
          items:
            $ref: '#/components/schemas/AppFeature'
          description: List of application features.
          default: []
        overrideValuePaths:
          type: array
          items:
            type: string
          description: List of override value paths.
          default: []
        application:
          $ref: '#/components/schemas/Application'
        workflowConfig:
          type: object
          description: Workflow configuration.
          nullable: true
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp.
        updatedAt:
          type: string
          format: date-time
          description: Update timestamp.
        createdBy:
          type: string
          description: Creator of the entity.
          nullable: true
        updatedBy:
          type: string
          description: Updater of the entity.
          nullable: true
        defaultNamespaces:
          type: object
          description: Default namespaces.
          nullable: true
          
    SectionItem:
      type: object
      properties:
        key:
          type: string
          description: Key of the section item.
        value:
          type: string
          description: Value of the section item.

    AppFeature:
      type: object
      properties:
        section:
          type: string
          description: Section name.
        items:
          type: array
          description: List of items in the section.
          items:
            anyOf:
              - type: string
              - $ref: '#/components/schemas/SectionItem'
          
    SwaggerSpecDto:
      type: object
      properties:
        port:
          type: integer
          description: Port number.
        targetPort:
          type: integer
          description: Target port number.
        path:
          type: string
          description: Path (optional).
          nullable: true
        protocol:
          type: string
          description: Protocol type.
        specType:
          type: string
          description: Specification type (optional).
          nullable: true
    
    AppLink:
      type: object
      properties:
        id:
          type: integer
          description: Primary key for the AppLink entity.
        documentName:
          type: string
          description: Name of the document.
        url:
          type: string
          description: URL of the document.
          nullable: true
        documentType:
          type: integer
          description: Type of the document.
        application:
          $ref: '#/components/schemas/Application'
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp.
        updatedAt:
          type: string
          format: date-time
          description: Update timestamp.
        createdBy:
          type: string
          description: Creator of the entity.
          nullable: true
        updatedBy:
          type: string
          description: Updater of the entity.
          nullable: true


    ProjectLink:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the project link.
        documentName:
          type: string
          description: Name of the document.
        url:
          type: string
          nullable: true
          description: URL of the document.
        documentType:
          type: integer
          description: Type of the document.
        project:
          $ref: '#/components/schemas/Project'
        createdAt:
          type: string
          format: date-time
          nullable: true
          description: Date and time when the project link was created.
        updatedAt:
          type: string
          format: date-time
          nullable: true
          description: Date and time when the project link was last updated.
        createdBy:
          type: string
          maxLength: 100
          nullable: true
          description: Identifier of the user who created the project link.
        updatedBy:
          type: string
          maxLength: 100
          nullable: true
          description: Identifier of the user who last updated the project link

    ProjectMetadata:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the project metadata.
        labels:
          type: array
          items:
            type: string
          nullable: true
          description: Labels associated with the project.
        project:
          $ref: '#/components/schemas/Project'
        createdAt:
          type: string
          format: date-time
          description: Date and time when the project metadata was created.
        updatedAt:
          type: string
          format: date-time
          description: Date and time when the project metadata was last updated.
        createdBy:
          type: string
          maxLength: 100
          nullable: true
          description: Identifier of the user who created the project metadata.
        updatedBy:
          type: string
          maxLength: 100
          nullable: true
          description: Identifier of the user who last updated the project metadata.
    Version:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the version.
        appRepoBasePath:
          type: string
          maxLength: 100
          nullable: true
          description: Base path for the app repository.
        appRepoName:
          type: string
          maxLength: 100
          nullable: true
          description: Full name of the app repository (e.g., org/repo or just repo).
        appDefaultBranch:
          type: string
          maxLength: 100
          nullable: true
          description: Default branch of the app repository.
        appCredentialId:
          type: string
          maxLength: 100
          nullable: true
          description: Credential ID for the app.
        appVcsOrganizationName:
          type: string
          maxLength: 100
          nullable: true
          description: VCS organization name for the app.
        appRepoId:
          type: string
          maxLength: 100
          nullable: true
          description: ID of the app repository.
        appOwnerId:
          type: string
          maxLength: 100
          nullable: true
          description: Owner ID of the app repository.
        application:
          $ref: '#/components/schemas/Application'
        webAppData:
          $ref: '#/components/schemas/WebAppData'
        createdAt:
          type: string
          format: date-time
          description: Date and time when the version was created.
        updatedAt:
          type: string
          format: date-time
          description: Date and time when the version was last updated.
        createdBy:
          type: string
          maxLength: 100
          description: Identifier of the user who created the version.
        updatedBy:
          type: string
          maxLength: 100
          nullable: true
          description: Identifier of the user who last updated the version.
          
    WebAppData:
      type: object
      properties:
        host:
          type: string
          description: Host of the web application.
        configs:
          $ref: '#/components/schemas/AwsWebAppData'
        dnsMetadata:
          type: object
          additionalProperties:
            type: array
            items:
              type: object
              properties:
                dnsRecordId:
                  type: integer
                  description: ID of the DNS record.
                certificateId:
                  type: integer
                  description: ID of the certificate.
          nullable: true
          description: Metadata for DNS records and certificates.
    AwsWebAppData:
      type: object
      additionalProperties:
        type: object
        properties:
          distributionId:
            type: string
            description: ID of the distribution.
          distributionUrl:
            type: string
            description: URL of the distribution.
          functions:
            type: array
            items:
              $ref: '#/components/schemas/FunctionAssociation'
            description: List of function associations
    FunctionAssociation:
      type: object
      properties:
        functionArn:
          type: string
          description: ARN of the function.
        eventType:
          type: string
          description: Type of the event.
    ClusterAssociationResponseDto:
      type: object
      properties:
        clusterId:
          type: string
          description: Unique identifier for the cluster.
        environmentId:
          type: string
          description: Unique identifier for the environment.
      required:
        - clusterId
        - environmentId
    RunningApplications:
      type: object
      properties:
        appIds:
          type: array
          items:
            type: string
          description: A list of application IDs.
        count:
          type: integer
          description: The count of running applications.
      required:
        - appIds
        - count
    GitHubCommits:
      type: object
      properties:
        reference:
          type: string
        nodeId:
          type: string
        branchUrl:
          type: string
        sha:
          type: string
        type:
          type: string
        commitUrl:
          type: string
      required:
        - reference
        - nodeId
        - branchUrl
        - sha
        - type
        - commitUrl
    GitHubFileContent:
      type: object
      properties:
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        size:
          type: string
        url:
          type: string
        htmlUrl:
          type: string
        gitUrl:
          type: string
        downloadUrl:
          type: string
        type:
          type: string
        commitMessage:
          type: string
      required:
        - name
        - path
        - sha
        - size
        - url
        - htmlUrl
        - gitUrl
        - downloadUrl
        - type
        - commitMessage
    DeploymentStatistics:
      type: object
      properties:
        id:
          type: string
          format: uuid
        orgId:
          type: string
        projectId:
          type: string
        appId:
          type: string
        appVersionId:
          type: string
        appName:
          type: string
        appType:
          type: string
        versionName:
          type: string
        envId:
          type: string
        envName:
          type: string
        envType:
          type: string
        createdAt:
          type: string
          format: date-time
        commitTime:
          type: string
        commitHash:
          type: string
        commitUser:
          type: string
        commitMessage:
          type: string
        commitAvatar:
          type: string
        gitopsCommitHash:
          type: string
        gitopsCommitMessage:
          type: string
        containerName:
          type: string
        tag:
          type: string
      required:
        - id
        - appId
        - appVersionId
        - appName
        - versionName
        - envId
        - envName
    ReleaseDataResponse:
      type: object
      properties:
        applications:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseApplication'
        environments:
          type: array
          items:
            $ref: '#/components/schemas/Environment'
        users:
          type: array
          items:
            additionalProperties: true
        deploymentStatsByEnv:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/DeploymentStatistics'
    ReleaseApplication:
      allOf:
        - $ref: '#/components/schemas/Application'
        - type: object
          properties:
            workflowRuns:
              type: array
              items:
                $ref: '#/components/schemas/WorkflowRun'
            workflows:
              type: array
              items:
                $ref: '#/components/schemas/Workflow'
    Workflow:
      type: object
      properties:
        id:
          type: string
        pipeline_type:
          type: string
        org_id:
          type: string
        app_id:
          type: string
        branch:
          type: string
        commit_data:
          additionalProperties: true
        created_at:
          type: string
          format: date-time
        credential_id:
          type: string
        env_id:
          type: string
        file_name:
          type: string
        last_triggered_at:
          type: string
          format: date-time
        project_id:
          type: string
        repository_name:
          type: string
        service_acc_id:
          type: string
        service_version:
          type: string
          nullable: true
        steps:
          type: array
          items:
            type: object
        jobs:
          type: array
          items:
            additionalProperties: true
        template:
          type: string
        triggers:
          type: array
          items:
            type: object
        organization_name:
          type: string
        pipeline_name:
          type: string
        pipeline_description:
          type: string
        updated_at:
          type: string
          format: date-time
        workflow_name:
          type: string
        workflow_content:
          type: string
        repo_secret_keys:
          type: array
          items:
            type: string

    WorkflowRun:
      type: object
      properties:
        repo_name:
          type: string
        credential_id:
          type: string
        organization_name:
          type: string
        file_name:
          type: string
        id:
          type: integer
        conclusion:
          type: string
          nullable: true
          enum: [success, failure, cancelled, startup_failure]
        created_at:
          type: string
          format: date-time
        display_title:
          type: string
        head_branch:
          type: string
        head_sha:
          type: string
        name:
          type: string
        status:
          type: string
        run_number:
          type: integer
        updated_at:
          type: string
          format: date-time
        run_started_at:
          type: string
          format: date-time
        actor:
          type: object
          properties:
            login:
              type: string
            avatar_url:
              type: string
        head_commit:
          type: object
          properties:
            id:
              type: string
            message:
              type: string
            timestamp:
              type: string
        repository:
          type: object
          properties:
            name:
              type: string
    DeploymentRequests:
      type: object
      properties:
        id:
          type: string
          format: uuid
        organizationId:
          type: string
        projectId:
          type: string
        applicationId:
          type: string
        environmentId:
          type: string
        requestBody:
          type: object
        createdAt:
          type: string
          format: date-time
    ExtendedConfigurationDTO:
      type: object
      allOf:
        - $ref: '#/components/schemas/Configuration'
        - type: object
          properties:
            additionalData:
              type: object
              additionalProperties: true
    LambdaLayers:
      type: object
      properties:
        id:
          type: integer
          format: int64
        layerName:
          type: string
        description:
          type: string
        organizationId:
          type: string
        projectId:
          type: string
        environmentId:
          type: string
        credentialId:
          type: string
        s3bucketName:
          type: string
        version:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - layerName
        - organizationId
        - projectId
        - credentialId
        - s3bucketName
    ServiceAccount:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        namespace:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
        kustomizeOverlayPath:
          type: string
        environment:
          type: object
          properties:
            id:
              type: string
              format: uuid
        organizationId:
          type: string
        projectId:
          type: string
        deletedAt:
          type: string
          format: date-time
      required:
        - name
        - namespace
        - createdBy
        - kustomizeOverlayPath
        - environment
        - organizationId
        - projectId
    ExtendedServiceAccountDTO:
      type: object
      allOf:
        - $ref: '#/components/schemas/ServiceAccount'
        - type: object
          properties:
            additionalData:
              additionalProperties: true